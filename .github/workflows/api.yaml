name: Api

on:
  push:
    paths:
    - 'api/**'
    - 'cdk/lib/api.ts'

jobs:
  container-job:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api

    services:
      dynamodb:
        image: amazon/dynamodb-local
        ports:
        - 8000:8000
    env:
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY: AWS_SECRET_ACCESS_KEY
    steps:
    - uses: actions/checkout@v2
    - name: Instal aws cli
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
    - name: Create dynamodb table
      run: |
        aws dynamodb create-table \
          --endpoint-url http://localhost:8000 \
          --table-name 'SiteVisits' \
          --attribute-definitions AttributeName=domain,AttributeType=S \
          --key-schema AttributeName=domain,KeyType=HASH \
          --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install -r requirements.txt
    - name: Test with pytest
      run: python -m pytest tests/ -v
      env:
        ENDPOINT_URL: http://localhost:8000
        TABLE_NAME: SiteVisits
        SITE_DOMAIN: domain
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: container-job
    defaults:
      run:
        working-directory: cdk
    env:
      DOMAIN: ${{ secrets.DOMAIN }}
    steps:
    - uses: actions/checkout@v2
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: $AWS_REGION
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - run: npm install -g cdk
    - run: npm ci
    - run: mkdir -p ../site/out
    - run: cdk synth -c domain=$DOMAIN MyApi
    - run: cdk diff -c domain=$DOMAIN MyApi
    - run: cdk deploy -c domain=$DOMAIN MyApi --force
